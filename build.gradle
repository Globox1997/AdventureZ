plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://maven.blamejared.com' }
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
	maven { url = uri("https://storage.googleapis.com/devan-maven/") }
	maven { url = uri("https://ueaj.dev/maven") }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Config
	modImplementation ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
    	exclude(group: "net.fabricmc.fabric-api")
  	}
	// Modmenu
	modCompileOnly modRuntimeOnly("com.terraformersmc:modmenu:${project.mod_menu_version}"),{
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Patchouli
	modCompileOnly "vazkii.patchouli:Patchouli:${project.patchouli_version}",{
		exclude(group: "net.fabricmc.fabric-api")
	}
	// VoidZ
	// modCompileOnly ('maven.modrinth:voidz:1.0.9+1.20.1'){
	// 	exclude(group: "net.fabricmc.fabric-api")
	// }
	modCompileOnly ("com.github.Globox1997:VoidZ:1.20-SNAPSHOT"),{
		exclude(group: "net.fabricmc.fabric-api")
	}
	// Dragonloot
	// modCompileOnly ('maven.modrinth:dragonloot:1.1.4+1.20.1'){
	// 	exclude(group: "net.fabricmc.fabric-api")
	// }
	// Iris
	modCompileOnly ('maven.modrinth:iris:1.6.2+1.19.2'){
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "fabric_version": project.fabric_version, "loader_version": project.loader_version, "minecraft_version": project.minecraft_version, "cloth_config_version": project.cloth_config_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
